swagger: "2.0"
info:
  description: " Some description  "
  version: "1.0.0"
  title: "Some title for API Documentation"
host: "example-app"
basePath: "/public/api/v1"
tags:
- name: "users"
  externalDocs:
    description: "Path"
    url: "http://example-app/public/api"
- name: "cars"
- name: "actions"
schemes:
- "http"
paths:
  /users:
    post:
      tags:
      - "users"
      summary: "Add a new user"
      description: ""
      operationId: "addUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "status ok"
        "400":
          description: "such a user exists"
    get:
      tags:
      - "users"
      summary: "Get all users"
      description: ""
      operationId: "getUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "status ok"
  /user/{id}:
    put:
      tags:
      - "users"
      summary: "Update user"
      description: ""
      operationId: "updateUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "status ok"
          schema:
           $ref: "#/definitions/User"
        "500":
          description: "such a user exists"
    delete:
      tags:
      - "users"
      summary: "Delete user"
      description: ""
      operationId: "deleteUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "status ok"
          schema:
           $ref: "#/definitions/User"
        "404":
          description: "user has already been deleted"
        "500":
          description: "attempt to delete the user who drives the car"
          
  /car:
    post:
      tags:
      - "cars"
      summary: "Add a new car"
      description: ""
      operationId: "addCar"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Car"
      responses:
        "200":
          description: "status ok"
        "400":
          description: "such a user exists"
    get:
      tags:
      - "cars"
      summary: "Get all car"
      description: ""
      operationId: "getCar"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Car"
      responses:
        "200":
          description: "status ok"
  /car/{id}:
    put:
      tags:
      - "cars"
      summary: "Update car"
      description: ""
      operationId: "updateCar"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "status ok"
          schema:
           $ref: "#/definitions/Car"
        "500":
          description: "such a user exists"
    delete:
      tags:
      - "cars"
      summary: "Delete car"
      description: ""
      operationId: "deleteCar"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "status ok"
          schema:
           $ref: "#/definitions/Car"
        "404":
          description: "car has already been deleted"
        "500":
          description: "attempt to remove a controlled car"
          
  /action:
    post:
      tags:
      - "actions"
      summary: "Add a new action"
      description: ""
      operationId: "addAction"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Action"
      responses:
        "200":
          description: "status ok"
        "400":
          description: "car or user is already busy"
    get:
      tags:
      - "actions"
      summary: "Get all action"
      description: ""
      operationId: "getAction"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Action"
      responses:
        "200":
          description: "status ok"
  /action/{id}:
    delete:
      tags:
      - "actions"
      summary: "Delete action"
      description: ""
      operationId: "deleteAction"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "204":
          description: ""
          schema:
           $ref: "#/definitions/Action"
      
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  Car:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  Action:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      user_id:
        type: "integer"
      car_id:
        type: "integer"